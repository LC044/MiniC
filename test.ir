declare i32 @arr[6][8][3]
define i32 @main() {
    declare i32 %l0 ; variable: return
    declare i32 %l1 ; variable: i
    declare i32 %l2 ; variable: sum
    declare i32 %t3
    declare i1 %t4
    declare i32 %t5
    declare i32 %t6
    declare i32 %t7
    declare i32 %t8
    declare i32 %t9
    declare i32* %t10
    declare i32 %t11
    declare i32 %t12
    declare i32 %t13
    declare i32 %t14
    declare i32 %t15
    declare i32 %t16
    declare i32 %t17
    entry
    %l1 = 0
    %l2 = 0
    br label .L3
.L3:
    %t3 = %l1
    %t4 = cmp lt %t3, 6
    bc %t4, label .L4, label .L5
.L4:
    %t5 = %l1
    %t6 = sub %t5, 1
    %t7 = %l1
    %t8 = add %t7, 1
    %t6 = mul @, 4
    %t8 = mul @, 4
    %t9 = mul %l1, 4
    %t9 = add @arr, 0
    %t12 = %l2
    %t13 = %t9
    %t14 = add %t12, %t13
    %l2 = %t14
    %t15 = %l1
    %t16 = add %t15, 1
    %l1 = %t16
    br label .L3
.L5:
    %l0 = %l2
    %t17 = %l0
    exit %t17
}
