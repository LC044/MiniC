declare i32 @a
declare i32 @b[2][5][3]
declare i32 @ght
define i32 @add(i32 %t0, i32 %t1) {
    declare i32 %l2 ; variable: a
    declare i32 %l3 ; variable: b
    declare i32 %l4 ; variable: return
    declare i32 %l5 ; variable: v
    declare i32 %t6
    declare i32 %t7
    declare i32 %t8
    declare i32 %t9
    declare i32 %t10
    declare i32 %t11
    declare i32 %t12
    declare i32 %t13
    entry
    %l2 = %t0
    %l3 = %t1
    %t6 = %l2
    %t7 = %l3
    %t8 = add %t6, %t7
    %l5 = %t8
    %t9 = %l2
    %t10 = sub %t9, 1
    %l5 = %t10
    %t11 = %l5
    %t12 = add %t11, 1
    %l4 = %t12
    %t13 = %l4
    exit %t13
}
define i32 @sub(i32 %t0, i32 %t1) {
    declare i32 %l2 ; variable: a
    declare i32 %l3 ; variable: b
    declare i32 %l4 ; variable: return
    declare i32 %l5 ; variable: c
    declare i32 %t6
    declare i32 %t7
    declare i32 %t8
    declare i32 %t9
    entry
    %l2 = %t0
    %l3 = %t1
    %t6 = %l2
    %t7 = %l3
    %t8 = sub %t6, %t7
    %l5 = %t8
    %l5 = %l5
    %l4 = %l5
    %t9 = %l4
    exit %t9
}
define i32 @main(i32 %t0, i32 %t1) {
    declare i32 %l2 ; variable: a_
    declare i32 %l3 ; variable: b
    declare i32 %l4 ; variable: return
    declare i32 %l5 ; variable: k
    declare i32 %l6[5] ; variable: i[5]
    declare i32 %l7 ; variable: f
    declare i32 %l8 ; variable: t
    declare i32 %t9
    declare i32 %t10
    declare i32 %t11
    declare i32 %t12
    declare i32 %t13
    declare i32 %t14
    entry
    %l2 = %t0
    %l3 = %t1
    %t9 = add 1, 2
    %l3 = %t9
    %t10 = %l3
    %t11 = add 1, %t10
    a = %t11
    %t12 = %l3
    %t13 = add 1, %t12
    %l3 = %t13
    %l3 = %l3
    %l4 = %l3
    %t14 = %l4
    exit %t14
}
